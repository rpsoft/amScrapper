{"version":3,"sources":["jsonToCSV.js"],"names":["data","require","lines","readFileSync","split","filter","Boolean","lines2","additionalData","otherAdditionalData","l","itemcode","String","prototype","replaceAll","target","replacement","join","prepareNode","node","attList","itemLine","e","line","n","offers","offs","o","offer","cond","price","amount","push","min","max","length","reduce","a","b","i","arr","iAttsNames","oSumNames","osNames","console","log","item","ASIN","iAtts","ItemAttributes","oSum","OfferSummary","os","Offers","Offer"],"mappings":"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","file":"jsonToCSV.js","sourcesContent":["var data = require('../dvdplayers_uk.json');\n\nvar lines = require('fs').readFileSync(\"../dataoutoutuk_saved.txt\", 'utf-8')\n    .split('\\n')\n    .filter(Boolean);\n\nvar lines2 = require('fs').readFileSync(\"../datauk_dates_raters.csv\", 'utf-8')\n    .split('\\n')\n    .filter(Boolean);\n\n\n\n\nvar additionalData = {}\n\nvar otherAdditionalData = {}\n\nfor ( l in lines ){\n  var itemcode = lines[l].split(\",\")[0]\n  additionalData[itemcode] = lines[l]\n}\n\nfor ( l in lines2 ){\n  var itemcode = lines2[l].split(\",\")[0]\n  otherAdditionalData[itemcode] = lines2[l]\n}\n\n\n\n\n\nString.prototype.replaceAll = function(target, replacement) {\n  return this.split(target).join(replacement);\n};\n\nfunction prepareNode(node,attList){\n  var itemLine = \"\"\n  for ( var e in attList) {\n\n      var line = \"\"\n      switch ( attList[e]) {\n        case \"LowestNewPrice\":\n          var n = node[attList[e]]\n          line = n ? n[0][\"FormattedPrice\"][0] : \"\"\n          break;\n        case \"Offer\":\n          var offers = node[attList[e]]\n\n          var offs = []\n\n          for ( var o in offers ){\n              var offer = offers[o]\n              var cond =  offer[\"OfferAttributes\"][0][\"Condition\"][0]\n              var price = offer[\"OfferListing\"][0][\"Price\"][0][\"FormattedPrice\"][0]\n              var amount = offer[\"OfferListing\"][0][\"Price\"][0][\"Amount\"][0]\n              offs.push({price,cond,amount})\n\n            //  console.log(JSON.stringify(offs))\n          }\n          var min = {}\n          var max = {}\n          if (offs.length > 0){\n            var min = offs.reduce(function(a, b, i, arr) {return (a.amount < b.amount ) ? a : b });\n            // console.log(min)\n            var max = offs.reduce(function(a, b, i, arr) {return (a.amount > b.amount ) ? a : b });\n            // console.log(max)\n          }\n\n          line = offs.length+\",\"+min.cond+\",\"+min.price+\",\"+max.cond+\",\"+max.price\n          break;\n\n        default:\n          line = node[attList[e]]+\"\"\n          line = line.replaceAll(\",\",\";\")\n      }\n\n\n      itemLine = itemLine + line  + \",\"\n  }\n  return itemLine\n}\n\nvar iAttsNames = [\"Binding\",\"Brand\",\"Color\",\"Feature\",\"Label\",\"ListPrice\",\"Manufacturer\",\"Model\",\"MPN\",\"PackageDimensions\",\"PackageQuantity\",\"PartNumber\",\"ProductGroup\",\"ProductTypeName\",\"Publisher\",\"Size\",\"Studio\",\"Title\"]\nvar oSumNames = [\"LowestNewPrice\",  \"TotalNew\",  \"TotalUsed\",  \"TotalCollectible\",  \"TotalRefurbished\"]\nvar osNames = [\"TotalOffers\",\"TotalOfferPages\",\"MoreOffersUrl\",\"Offer\"]\n\nconsole.log(\"ASIN,cheapestUsed,cheapestCondition1,cheapestCondition2,sellerStarRating,percentPositive,ASIN,earliestReviewDate,latestReviewDate,ratersNumber,ASIN,SalesRank,\"+iAttsNames.join(\",\")+\",\"+oSumNames.join(\",\")+\",\"+osNames.join(\",\")+\"s_number,min_condition,min_price,max_condition,max_price\")\n\nfor ( var i = 0; i < data.length; i++ ){\n  var itemLine = \"\"\n  var item = data[i][0];\n\n  itemLine = itemLine + item.ASIN[0]+\",\"\n  itemLine = itemLine + item[\"SalesRank\"]+\",\"\n\n  var iAtts = item.ItemAttributes[0]\n  var oSum = item.OfferSummary[0]\n  var os = item.Offers[0]\n\n  itemLine = itemLine+ prepareNode(iAtts,iAttsNames)\n  itemLine = itemLine+ prepareNode(oSum,oSumNames)\n itemLine = itemLine+ prepareNode(os,osNames)\n\n  var o = item.Offers[0].Offer\n\n\n\n  console.log(additionalData[item.ASIN[0]] + ','+ otherAdditionalData[item.ASIN[0]] + \",\" + itemLine)\n}\n"]}